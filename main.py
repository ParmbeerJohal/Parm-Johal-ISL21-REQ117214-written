import argparse
import os
import logging
from src.rules_engine import RulesEngine
from src.mqtt_client import MQTTClient

# Dynamically create the log directory and file if they don't exist
log_dir = "./logs"
log_file = "app.log"
os.makedirs(log_dir, exist_ok=True)

# Configure logging
logging.basicConfig(
  level=logging.INFO,
  format="%(asctime)s - %(levelname)s - %(filename)s - %(module)s - %(message)s",
  handlers=[
    logging.FileHandler(os.path.join(log_dir, log_file)),
    logging.StreamHandler()
  ]
)
logger = logging.getLogger(__name__)

def main():
  logger.info("Starting the rules engine application.")

  # Parse the command-line arguments
  parser = argparse.ArgumentParser()
  parser.add_argument(
    "--topic-id",
    required=True,
    help="The unique MQTT topic ID generated by the Winter Supplement web app.",
  )
  args = parser.parse_args()
  
  # Retrieve the topic ID
  topic_id = args.topic_id
  
  # Initialize the rules engine
  rules_engine = RulesEngine()

  # Initialize and start the MQTT client
  mqtt_client = MQTTClient(topic_id, rules_engine)
  try:
    mqtt_client.start()
  except KeyboardInterrupt:
    mqtt_client.stop()
  except Exception as e:
    logger.error(f"An unexpected error occurred: {e}")


if __name__ == "__main__":
  main()